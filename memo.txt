tasks テーブルに status カラムを追加してください。
status は、MySQL上で VARCHAR(10) となるように作成しましょう。
なお、カラムの最大文字数を指定する方法は、次のドキュメントを参考にしてください。
参考：使用できるカラムタイプ
migrationFile:$table->string('task', 10);を直してmigrationFile:$table->string('status', 10);(fixed参照)


作成と編集ページで status を編集可能にしてください。
（statusはinput要素のtype属性：textにします）
{!! Form::text('content', null, ['class' => 'form-control']) !!}を追加


一覧と詳細ページで status を表示してください。
        
        <td>{{ $task->status }}</td>
        
        <tr>
            <th>タイトル</th>(fixedにて修正)
            <td>{{ $task->status }}</td>
        </tr>


status に「空文字を許さないバリデーション」と
「10文字を超える文字数を許さない」バリデーションをつけ、
エラーとなった際は画面へ表示するようにしてください。
（content に対するバリデーションの追加は任意としますが、
status には必ず2つのバリデーションを実装してください）

TasksController.php:store&update
$request->validate([
            'status' => 'required|max:10',
        ]);

tasks/%.blade.php %=create&edit
    @if (count($errors) > 0)
        <ul class="alert alert-danger" role="alert">
            @foreach ($errors->all() as $error)
                <li class="ml-4">{{ $error }}</li>
            @endforeach
        </ul>
    @endif

@include('commons.error_tasks')で
layout/app.blade.phpから
commons/error_tasks.blade.phpを呼び出し


fixed

migrationFile:(2020_09_08_160403_add_status_to_tasks_table.php)
カラム名をtaskからstatusに直す

viewFile:(show.blade.php)
詳細ページで「タイトル」から「ステータス」に修正


add

controllerFile:
$request->validate([
            'status' => 'required|max:10',
        ]);
から
$request->validate([
            'status' => 'required|max:10',
            'content' => 'required|max:255',
        ]);
に変更

ユーザ登録と認証（ログイン、ログアウト）の機能追加
// ユーザ登録
Route::get('signup', 'Auth\RegisterController@showRegistrationForm')->name('signup.get');
Route::post('signup', 'Auth\RegisterController@register')->name('signup.post');
signup page
// 認証
Route::get('login', 'Auth\LoginController@showLoginForm')->name('login');
Route::post('login', 'Auth\LoginController@login')->name('login.post');
Route::get('logout', 'Auth\LoginController@logout')->name('logout.get');

未ログイン状態ではタスクの作成、編集、削除、表示ができない
Route::group(['middleware' => ['auth']], function () {
    Route::resource('users', 'TasksController', ['only' => ['index', 'show']]);
    Route::resource('tasklists', 'TasksController', ['only' => ['store', 'destroy']]);
});

自分自身のタスクのみを操作可能(他のユーザからのアクセスはすべてトップページにリダイレクト)
ユーザ一覧、ユーザ詳細、 Gravatarの表示などは不必要
